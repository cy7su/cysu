name: 🚀 Build & Deploy

on:
  push:
    branches: [ TEST ]
  pull_request:
    branches: [ TEST ]

env:
  DOCKER_REGISTRY: docker.io
  IMAGE_NAME: cysu

jobs:
  test:
    name: 🧪 Tests & Quality
    runs-on: ubuntu-latest
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
    
    - name: 🐍 Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: 📦 Install dependencies
      run: |
        pip install --upgrade pip
        pip install -r requirements.txt
        pip install flake8
    
    - name: 🔍 Code quality check
      run: |
        echo "🔍 Running flake8 analysis..."
        flake8 app/ run.py --max-line-length=120 --ignore=E501,W503
        echo "✅ Code quality check passed"
    
    - name: 🧪 Run tests
      run: |
        echo "🧪 Running basic tests..."
        python -c "import app; print('✅ App imports successfully')"
        echo "✅ Basic tests passed"

  build:
    name: 🐳 Build Docker Image
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/TEST'
    outputs:
      image: ${{ steps.build.outputs.image }}
      digest: ${{ steps.build.outputs.digest }}
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
    
    - name: 🐳 Setup Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: 🔐 Login to Docker Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.DOCKER_REGISTRY }}
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: 🏗️ Build and push Docker image
      id: build
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          ${{ env.DOCKER_REGISTRY }}/${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:latest
          ${{ env.DOCKER_REGISTRY }}/${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: linux/amd64

  deploy:
    name: 🚀 Deploy
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/TEST'
    steps:
    - name: 📊 Deployment Summary
      run: |
        echo "🎉 Deployment completed successfully!"
        echo "🐳 Docker Image: ${{ needs.build.outputs.image }}"
        echo "📝 Digest: ${{ needs.build.outputs.digest }}"
        echo "🏷️ Tag: ${{ github.sha }}"